# Generated by Django 4.2.6 on 2023-11-06 02:25

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('eventapp', '0002_remove_user_groups_remove_user_is_superuser_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='eventdate',
            name='event',
        ),
        migrations.RemoveConstraint(
            model_name='availablefor',
            name='unique_available_for',
        ),
        migrations.RemoveField(
            model_name='availablefor',
            name='date',
        ),
        migrations.AddField(
            model_name='availablefor',
            name='end_time',
            field=models.DateTimeField(blank=True, db_column='EndTime', null=True),
        ),
        migrations.AddField(
            model_name='availablefor',
            name='start_time',
            field=models.DateTimeField(blank=True, db_column='StartTime', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='active'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(max_length=255, unique=True, verbose_name='username'),
        ),
        migrations.AddConstraint(
            model_name='availablefor',
            constraint=models.UniqueConstraint(fields=('user', 'event', 'start_time', 'end_time'), name='unique_available_for_slot'),
        ),
        migrations.DeleteModel(
            name='EventDate',
        ),
    ]
